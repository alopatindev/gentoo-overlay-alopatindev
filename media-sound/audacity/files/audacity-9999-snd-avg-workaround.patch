diff --git a/lib-src/libnyquist/nyquist/nyqsrc/avg.c b/lib-src/libnyquist/nyquist/nyqsrc/avg.c
index a6b308ce3..42cf6ad67 100644
--- a/lib-src/libnyquist/nyquist/nyqsrc/avg.c
+++ b/lib-src/libnyquist/nyquist/nyqsrc/avg.c
@@ -76,9 +76,9 @@ sample_type peak_block(avg_susp_type susp)
 void avg_s_fetch(snd_susp_type a_susp, snd_list_type snd_list)
 {
     avg_susp_type susp = (avg_susp_type) a_susp;
-    int cnt = 0; /* how many samples computed */
-    int togo = 0;
-    int n;
+    long cnt = 0; /* how many samples computed */
+    long togo = 0;
+    long n;
     sample_block_type out;
     register sample_block_values_type out_ptr;
 
@@ -98,12 +98,13 @@ void avg_s_fetch(snd_susp_type a_susp, snd_list_type snd_list)
     /* don't run past the s input sample block: */
     susp_check_term_log_samples(s, s_ptr, s_cnt);
     togo = MIN(togo, susp->s_cnt);
+    if (togo <= 0) break;
 
     /* don't run past terminate time */
     if (susp->terminate_cnt != UNKNOWN &&
         susp->terminate_cnt <= susp->susp.current + cnt + togo/susp->stepsize) {
         togo = (susp->terminate_cnt - (susp->susp.current + cnt)) * susp->stepsize;
-        if (togo == 0) break;
+        if (togo <= 0) break;
     }
 
 
@@ -127,21 +128,25 @@ void avg_s_fetch(snd_susp_type a_susp, snd_list_type snd_list)
         } else /* limit togo so we can start a new
             * block at the LST
             */
-            togo = to_stop * susp->stepsize;
+            {
+                togo = to_stop * susp->stepsize;
+                if (togo <= 0) break;
+            }
         }
     }
 
+    togo = MAX(0, togo);
     n = togo;
     s_ptr_reg = susp->s_ptr;
     fillptr_reg = susp->fillptr;
-    if (n) do { /* the inner sample computation loop */
+    if (n > 0) do { /* the inner sample computation loop */
         *fillptr_reg++ = *s_ptr_reg++;
         if (fillptr_reg >= endptr_reg) {
            *out_ptr++ = (*(susp->process_block))(susp);
            cnt++;
            fillptr_reg -= susp->stepsize;
         }
-    } while (--n); /* inner loop */
+    } while (--n > 0); /* inner loop */
 
     /* using s_ptr_reg is a bad idea on RS/6000: */
     susp->s_ptr += togo;
@@ -150,7 +155,7 @@ void avg_s_fetch(snd_susp_type a_susp, snd_list_type snd_list)
     } /* outer loop */
 
     /* test for termination */
-    if (togo == 0 && cnt == 0) {
+    if (togo <= 0 && cnt == 0) {
     snd_list_terminate(snd_list);
     } else {
     snd_list->block_len = cnt;
