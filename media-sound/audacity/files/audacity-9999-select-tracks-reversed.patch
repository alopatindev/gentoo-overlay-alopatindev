diff --git a/src/commands/SelectCommand.cpp b/src/commands/SelectCommand.cpp
index 6ea689ba0..20763c460 100644
--- a/src/commands/SelectCommand.cpp
+++ b/src/commands/SelectCommand.cpp
@@ -180,6 +180,7 @@ static const ComponentInterfaceSymbol kModes[nModes] =
 bool SelectTracksCommand::DefineParams( ShuttleParams & S ){
    S.OptionalN( bHasFirstTrack).Define( mFirstTrack, wxT("Track"), 0.0, 0.0, 100.0);
    S.OptionalN( bHasNumTracks ).Define( mNumTracks,  wxT("TrackCount"),  1.0, 0.0, 100.0);
+   S.OptionalN( bHasReversedOrder ).Define( mbReversedOrder, wxT("ReversedOrder"), false );
    S.OptionalY( bHasMode      ).DefineEnum( mMode,   wxT("Mode"), 0, kModes, nModes );
    
    return true;
@@ -195,6 +196,7 @@ void SelectTracksCommand::PopulateOrExchange(ShuttleGui & S)
       S.SetStretchyCol( 2 );
       S.Optional( bHasFirstTrack).TieTextBox(_("First Track:"),mFirstTrack);
       S.Optional( bHasNumTracks).TieTextBox(_("Track Count:"),mNumTracks);
+      S.Optional( bHasReversedOrder).TieCheckBox(_("Reversed Order:"), mbReversedOrder);
    }
    S.EndMultiColumn();
    S.StartMultiColumn(2, wxALIGN_CENTER);
@@ -219,10 +221,17 @@ bool SelectTracksCommand::Apply(const CommandContext &context)
       mNumTracks = 1.0;
    if( !bHasFirstTrack ) 
       mFirstTrack = 0.0;
+   if ( !bHasReversedOrder )
+      mbReversedOrder = false;
 
    // Multiple channels count as fractions of a track.
    double last = mFirstTrack+mNumTracks;
    double first = mFirstTrack;
+   if (mbReversedOrder) {
+       const double trackListSize = static_cast<double>(tracks->size());
+       last = trackListSize - (mFirstTrack + 1.0);
+       first = last - mNumTracks;
+   }
 
    for (auto t : tracks->Leaders()) {
       auto channels = TrackList::Channels(t);
diff --git a/src/commands/SelectCommand.h b/src/commands/SelectCommand.h
index 9868d09cf..df4f2b689 100644
--- a/src/commands/SelectCommand.h
+++ b/src/commands/SelectCommand.h
@@ -87,12 +87,15 @@ public:
    // AudacityCommand overrides
    wxString ManualPage() override {return wxT("Extra_Menu:_Scriptables_I#select_tracks");};
 
+private:
    bool bHasFirstTrack;
    bool bHasNumTracks;
+   bool bHasReversedOrder;
    bool bHasMode;
 
    double mFirstTrack;
    double mNumTracks;
+   bool mbReversedOrder;
    int mMode;
 };
 
