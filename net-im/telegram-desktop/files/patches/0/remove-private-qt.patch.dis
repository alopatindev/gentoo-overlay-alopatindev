Remove uses of private Qt classes

Currently, this is used to fix compatibility with odd environments, and only
for Qt6. This causes more trouble than it's worth, because it means telegram
must be rebuilt with every minor Qt bump.

https://bugs.gentoo.org/908500

--- tdesktop-4.8.4-full.orig/Telegram/lib_ui/ui/rp_widget.cpp
+++ tdesktop-4.8.4-full/Telegram/lib_ui/ui/rp_widget.cpp
@@ -13,54 +13,9 @@
 #include <QtGui/QWindow>
 #include <QtGui/QtEvents>
 #include <QtGui/QColorSpace>
-#include <private/qwidget_p.h>
-
-// Patching out this code without patching out all other private API usage
-// and the Qt::{Core,Gui,Widgets}Private cmake dependency is asking
-// for memory corruption
-class TWidgetPrivate : public QWidgetPrivate {
-public:
-#if QT_VERSION >= QT_VERSION_CHECK(6, 4, 0)
-	TWidgetPrivate(int version = QObjectPrivateVersion)
-	: QWidgetPrivate(version) {
-		[[maybe_unused]] static const auto Once = [] {
-			if (::Platform::IsWayland()
-				&& Ui::GL::ChooseBackendDefault(
-						Ui::GL::CheckCapabilities(nullptr, true))
-					== Ui::GL::Backend::OpenGL) {
-				qApp->setProperty("_q_widgets_highdpi_downscale", true);
-				WaylandGL = true;
-			}
-			return true;
-		}();
-	}
-
-	QPlatformBackingStoreRhiConfig rhiConfig() const override {
-		const auto q = static_cast<TWidget*>(q_ptr);
-		if (!q->testAttribute(Qt::WA_WState_Created)
-			|| (!q->testAttribute(Qt::WA_NativeWindow)
-				&& !q->isWindow())) {
-			return QWidgetPrivate::rhiConfig();
-		}
-		if (const auto config = q->rhiConfig()) {
-			return *config;
-		}
-		// fix flickering on GNOME
-		if (WaylandGL) {
-			return { QPlatformBackingStoreRhiConfig::OpenGL };
-		}
-		return QWidgetPrivate::rhiConfig();
-	}
-#endif // Qt >= 6.4.0
-
-private:
-	static bool WaylandGL;
-};
-
-bool TWidgetPrivate::WaylandGL = false;
 
 TWidget::TWidget(QWidget *parent)
-: TWidgetHelper<QWidget>(*(new TWidgetPrivate), parent, {}) {
+: TWidgetHelper<QWidget>(parent, {}) {
 	[[maybe_unused]] static const auto Once = [] {
 		auto format = QSurfaceFormat::defaultFormat();
 		format.setSwapInterval(0);

